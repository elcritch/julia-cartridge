#!/bin/bash -eu


source $OPENSHIFT_CARTRIDGE_SDK_BASH
pid_file="${OPENSHIFT_JULIA_DIR}julia.pid"


function catchall() {
  return 0
}

function is_running() {
  if [ -f $pid_file ]; then
    npid=$(cat $pid_file 2> /dev/null)
    if [ `ps --no-heading --pid $npid | wc -l` -gt 0 ] ; then
      return 0
    fi
  fi
  return 1
}

function start() {
  if is_running; then
    client_result "application $OPENSHIFT_APP_NAME is already running"
  else
    cd $OPENSHIFT_REPO_DIR
    client_message "Starting $OPENSHIFT_APP_NAME"
    nohup julia server.jl >/dev/null 2>&1 &
    npid=$(ps -eo pid,command | grep "server.jl" | grep -v grep | awk '{print $1}')
    echo "$npid" > "$pid_file"
    client_result "started $OPENSHIFT_APP_NAME"
  fi
}


function stop() {
  client_message "stopping $OPENSHIFT_APP_NAME application..."
  if [ -f $pid_file ]; then
    npid=$(cat $pid_file 2> /dev/null)
    if [ -n "$npid" ]; then
      client_message "stopping $OPENSHIFT_APP_NAME"
      if ! is_running; then
        kill "$npid" 2> /dev/null
      fi
    fi
  else
    npid=$(ps -eo pid,command | grep "server.jl" | grep -v grep | awk '{print $1}')
    if [ -n "$npid" ]; then
      client_message "stopping $OPENSHIFT_APP_NAME"
      kill "$npid" 2> /dev/null
    fi
  fi
  client_message "$OPENSHIFT_APP_NAME application stopped"
  rm -f $pid_file
}


function restart() {
  stop
  start
}


function status() {
  if is_running; then
      client_result "$OPENSHIFT_APP_NAME running"
  fi
  client_result "$OPENSHIFT_APP_NAME not-running"
}

function tidy() {
  shopt -s dotglob
  client_message "Emptying logs in ${OPENSHIFT_LOG_DIR}..."
  rm -rf ${OPENSHIFT_LOG_DIR}/*.log*
  client_message 'Done.'
}

case "$1" in
  start)                start   ;;
  stop)                 stop    ;;
  restart)              restart ;;
  status)               status  ;;
  tidy)                 tidy    ;;
  *)           exit 0
esac

#exit 0
